{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Components/Dashboard/FabAddIcon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SpellsApiService from '../../Services/spells-api-service';\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from '../../styles.js';\nimport Haikunator from 'haikunator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FabAddIcon(props) {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory();\n  var haikunator = new Haikunator();\n\n  const clickNewSpell = () => {\n    let randomTitle = haikunator.haikunate({\n      tokenLength: 0,\n      delimiter: \" \"\n    }).split(' ').map(word => word[0].toUpperCase() + word.slice(1)).join(' ');\n    console.log(randomTitle);\n    SpellsApiService.postNewSpell(randomTitle).then(spell => {\n      history.push(`/spells/${spell.id}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"New Spell\",\n    placement: \"top\",\n    children: /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.fab,\n      onClick: () => clickNewSpell(),\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FabAddIcon, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = FabAddIcon;\nexport default FabAddIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"FabAddIcon\");","map":{"version":3,"sources":["/usr/src/app/src/Components/Dashboard/FabAddIcon.js"],"names":["React","Fab","AddIcon","Tooltip","SpellsApiService","useHistory","useStyles","Haikunator","FabAddIcon","props","classes","history","haikunator","clickNewSpell","randomTitle","haikunate","tokenLength","delimiter","split","map","word","toUpperCase","slice","join","console","log","postNewSpell","then","spell","push","id","fab"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAIK,OAAO,GAAGN,UAAU,EAAxB;AAEA,MAAIO,UAAU,GAAG,IAAIL,UAAJ,EAAjB;;AAGA,QAAMM,aAAa,GAAG,MAAM;AAC1B,QAAIC,WAAW,GAAGF,UAAU,CAACG,SAAX,CAAqB;AAACC,MAAAA,WAAW,EAAE,CAAd;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAArB,EACfC,KADe,CACT,GADS,EACJC,GADI,CACAC,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,KAAwBD,IAAI,CAACE,KAAL,CAAW,CAAX,CADhC,EAC+CC,IAD/C,CACoD,GADpD,CAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AAEAV,IAAAA,gBAAgB,CAACsB,YAAjB,CAA8BZ,WAA9B,EACCa,IADD,CACOC,KAAD,IAAW;AACfjB,MAAAA,OAAO,CAACkB,IAAR,CAAc,WAAUD,KAAK,CAACE,EAAG,EAAjC;AACD,KAHD;AAID,GAVD;;AAYA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,WAAf;AAA2B,IAAA,SAAS,EAAC,KAArC;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,oBAAW,KAAhC;AAAsC,MAAA,SAAS,EAAEpB,OAAO,CAACqB,GAAzD;AAA8D,MAAA,OAAO,EAAE,MAAMlB,aAAa,EAA1F;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BQL,U;UACSF,S,EACFD,U;;;KAFPG,U;AA4BT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SpellsApiService from '../../Services/spells-api-service';\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from '../../styles.js';\nimport Haikunator from 'haikunator';\n\nfunction FabAddIcon(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  var haikunator = new Haikunator()\n\n\n  const clickNewSpell = () => {\n    let randomTitle = haikunator.haikunate({tokenLength: 0, delimiter: \" \"})\n      .split(' ').map(word => word[0].toUpperCase() + word.slice(1)).join(' ')\n\n    console.log(randomTitle);\n    \n    SpellsApiService.postNewSpell(randomTitle)\n    .then((spell) => {\n      history.push(`/spells/${spell.id}`)\n    })\n  }\n\n  return (\n    <Tooltip title=\"New Spell\" placement=\"top\">\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={() => clickNewSpell()}>\n        <AddIcon />\n      </Fab>\n    </Tooltip>\n  );\n}\n\nexport default FabAddIcon;"]},"metadata":{},"sourceType":"module"}