{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Components/Dashboard/SpellDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams, Prompt } from \"react-router-dom\";\nimport TokenService from '../../Services/token-service';\nimport config from '../../config';\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SpellsApiService from '../../Services/spells-api-service';\nimport Chip from '@material-ui/core/Chip';\nimport LockIcon from '@material-ui/icons/Lock';\nimport useStyles from '../../styles.js';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CodeMirror from 'codemirror';\nimport { UnControlled as ReactCodeMirror } from 'react-codemirror2';\nimport 'codemirror/addon/edit/matchbrackets.js';\nimport 'codemirror/addon/edit/closebrackets.js';\nimport 'codemirror/addon/selection/active-line.js';\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet debounceTimer;\nexport default function SpellDetails(props) {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory();\n  const [spell, setSpell] = useState();\n  const [isSaving, setIsSaving] = useState(false); // FIXME: CodeMirror re-render workaround. Needs revision\n\n  const [spellText, setSpellText] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const [spellToDelete, setSpellToDelete] = React.useState(undefined);\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState('');\n  const [spellTag, setSpellTag] = useState(\"\");\n  const [userOwnsSpell, setUserOwnsSpell] = useState();\n  const [error, setError] = useState(null);\n  let debounceWait = 2000;\n  let spinnerShow = 1000;\n\n  const handleClickOpen = id => {\n    setSpellToDelete(id);\n  };\n\n  const handleClose = id => {\n    setSpellToDelete(undefined);\n  };\n\n  const {\n    id\n  } = useParams();\n  const path = window.location.pathname;\n  useEffect(() => {\n    let isMounted = true;\n    SpellsApiService.checkForSpellOwnership(id).then(res => {\n      setUserOwnsSpell(res.userOwnsSpell);\n    });\n    SpellsApiService.getSpellById(id).then(spell => {\n      if (isMounted) {\n        // console.log(\"spell\" , spell)\n        setSpell(spell);\n        setSpellText(spell.text);\n      }\n    }).catch(res => {\n      setError(res.error);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [path, id]);\n\n  const debounce = (func, delay) => {\n    // setIsSaving(true);\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => func(), delay);\n  };\n\n  const tagWhitelist = [{\n    title: 'Fire'\n  }, {\n    title: 'Ice'\n  }, {\n    title: 'Water'\n  }, {\n    title: 'Deception'\n  }, {\n    title: 'Plant'\n  }, {\n    title: \"Rock\"\n  }, {\n    title: 'Pet'\n  }, {\n    title: 'Parasite'\n  }, {\n    title: 'Electric'\n  }, {\n    title: 'Attack'\n  }, {\n    title: 'Heal'\n  }];\n\n  const updateSpell = spell => {\n    setIsSaving(true);\n    let payload = spell;\n    return fetch(`${config.API_ENDPOINT}/spells/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(payload)\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(spell => {\n      setTimeout(() => {\n        setIsSaving(false);\n      }, spinnerShow); // setIsSaving(false)\n\n      setSpell(spell);\n    }).catch(errors => console.log(\"UpdateSpell errors\", errors));\n  };\n\n  function deleteSpells(id) {\n    return fetch(`${config.API_ENDPOINT}/spells/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).catch(errors => console.log(\"deleteSpell errors\", errors));\n  }\n\n  function addTagToSpell(id, tag) {\n    return fetch(`${config.API_ENDPOINT}/spells/${id}/tags/${tag}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      } // body: JSON.stringify(payload)\n\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(tag => {\n      setIsSaving(false);\n      setSpell({ ...spell,\n        tags: [...spell.tags, tag]\n      });\n    }).catch(errors => console.log(\"add tag errors\", errors));\n  } //Press enter to save tag\n\n\n  function handleKeyUp(event) {\n    if (event.keyCode === 13 && spellTag) {\n      addTagToSpell(spell.id, spellTag);\n      setSpellTag(\"\");\n    }\n  }\n\n  function removeTagFromSpell(id, tag_name) {\n    return fetch(`${config.API_ENDPOINT}/spells/${id}/tags/${tag_name}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(tag => {\n      setIsSaving(false);\n      setSpell({ ...spell,\n        tags: spell.tags.filter(t => {\n          return t.name !== tag_name;\n        })\n      });\n    }).catch(errors => console.log(\"remove tag errors\", errors));\n  }\n\n  const clickForkIcon = id => {\n    // console.log(\"Before API \", id);\n    SpellsApiService.forkSpellById(id).then(spell => {\n      history.push(`/spells/${spell.id}`); // console.log(\"After history \", spell.id);\n      // console.log(object);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isSaving,\n      message: \"Spell is not saved yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this), spell ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.titleRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.metaID,\n          children: [\"ID: \", spell.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.metaTitle,\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            children: spell.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.metaSpinner,\n          children: spell.locked || !userOwnsSpell ? '' : isSaving ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.spinner,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.spinner,\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.iconRow,\n        children: [spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.spellDetailsTitle,\n          id: \"spell-details-title\",\n          label: \"Name\",\n          defaultValue: spell.name,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.spellDetailsTitle,\n          id: \"spell-details-title-owns\",\n          label: \"Name\",\n          defaultValue: spell.name,\n          onChange: event => {\n            setSpell({ ...spell,\n              name: event.target.value\n            });\n            setTimeout(() => {\n              debounce(() => updateSpell({ ...spell,\n                name: event.target.value\n              }), debounceWait);\n            }, 500);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.spellDetailsImage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.imgur.com/VE9Aksf.jpg\",\n            alt: \"Spell Image\",\n            width: \"40%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.iconBox,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.spellDetailsIcons,\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Fork Spell\",\n              placement: \"top\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => clickForkIcon(spell.id),\n                children: /*#__PURE__*/_jsxDEV(CallSplitIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Spell Locked\",\n              placement: \"top\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Public status\",\n                placement: \"top-end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"isPublic\",\n                  onClick: () => {\n                    setSpell({ ...spell,\n                      is_public: !spell.is_public\n                    });\n                    debounce(() => updateSpell({ ...spell,\n                      is_public: !spell.is_public\n                    }), debounceWait);\n                  },\n                  children: spell.is_public ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 40\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete\",\n                placement: \"top-end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  onClick: () => handleClickOpen(spell.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: spellToDelete === spell.id,\n        onClose: () => handleClose(spell.id),\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Delete spell?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: \"Are you sure you would like to delete this spell?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              handleClose();\n              deleteSpells(spell.id);\n              history.push('/spells');\n            },\n            color: \"secondary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Keep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.iconRow,\n        children: spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.spellDetailsDescription,\n          id: \"spell-details-description\",\n          label: \"Description\",\n          defaultValue: spell.description,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.spellDetailsDescription,\n          id: \"spell-details-description-owns\",\n          label: \"Description\",\n          defaultValue: spell.description,\n          onChange: event => {\n            setSpell({ ...spell,\n              description: event.target.value\n            });\n            setTimeout(() => {\n              debounce(() => updateSpell({ ...spell,\n                description: event.target.value\n              }), debounceWait);\n            }, 500);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.iconRow,\n        children: spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.tagLine,\n          placeholder: \"Tag\",\n          value: spellTag,\n          label: \"Spell Tags\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.tagLine,\n          placeholder: \"Tag\",\n          onKeyUp: handleKeyUp,\n          value: spellTag,\n          label: \"Spell Tags\",\n          onChange: event => {\n            setSpellTag(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.icon,\n        children: spell.tags.map(t => /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          size: \"small\",\n          label: t.name\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.icon,\n        children: spell.tags.map(t => /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          size: \"small\",\n          label: t.name,\n          onDelete: () => removeTagFromSpell(spell.id, t.name)\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.spellDetailsCodeMirror,\n        children: spell.locked || !userOwnsSpell ? /*#__PURE__*/_jsxDEV(ReactCodeMirror, {\n          className: classes.spellDetailsCodeMirror,\n          value: spellText ? spellText : '',\n          options: {\n            lineWrapping: true,\n            mode: 'scheme',\n            theme: 'material',\n            lineNumbers: true,\n            matchBrackets: true,\n            autoCloseBrackets: true,\n            styleActiveLine: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ReactCodeMirror, {\n          className: classes.spellDetailsCodeMirror,\n          value: spellText ? spellText : '',\n          options: {\n            lineWrapping: true,\n            mode: 'scheme',\n            theme: 'material',\n            lineNumbers: true,\n            matchBrackets: true,\n            autoCloseBrackets: true,\n            styleActiveLine: true\n          },\n          onChange: (editor, data, value) => {\n            setSpell({ ...spell,\n              text: value\n            }); // setIsSaving(true)\n\n            setTimeout(() => {\n              debounce(() => updateSpell({ ...spell,\n                text: value\n              }), debounceWait);\n            }, 500);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"alert\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 18\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SpellDetails, \"p05nkr1zaOVW2G2wnmMX/YGuA6Y=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = SpellDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpellDetails\");","map":{"version":3,"sources":["/usr/src/app/src/Components/Dashboard/SpellDetails.js"],"names":["React","useEffect","useState","useHistory","useParams","Prompt","TokenService","config","Title","TextField","CircularProgress","IconButton","VisibilityIcon","VisibilityOffIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DeleteForeverIcon","Button","Tooltip","SpellsApiService","Chip","LockIcon","useStyles","CheckIcon","CodeMirror","UnControlled","ReactCodeMirror","CallSplitIcon","debounceTimer","SpellDetails","props","classes","history","spell","setSpell","isSaving","setIsSaving","spellText","setSpellText","undefined","open","setOpen","spellToDelete","setSpellToDelete","value","setValue","inputValue","setInputValue","spellTag","setSpellTag","userOwnsSpell","setUserOwnsSpell","error","setError","debounceWait","spinnerShow","handleClickOpen","id","handleClose","path","window","location","pathname","isMounted","checkForSpellOwnership","then","res","getSpellById","text","catch","debounce","func","delay","clearTimeout","setTimeout","tagWhitelist","title","updateSpell","payload","fetch","API_ENDPOINT","method","headers","getAuthToken","body","JSON","stringify","ok","json","e","Promise","reject","errors","console","log","deleteSpells","addTagToSpell","tag","tags","handleKeyUp","event","keyCode","removeTagFromSpell","tag_name","filter","t","name","clickForkIcon","forkSpellById","push","titleRow","metaID","metaTitle","metaSpinner","locked","spinner","iconRow","spellDetailsTitle","target","spellDetailsImage","iconBox","spellDetailsIcons","is_public","spellDetailsDescription","description","tagLine","icon","map","spellDetailsCodeMirror","lineWrapping","mode","theme","lineNumbers","matchBrackets","autoCloseBrackets","styleActiveLine","editor","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams, Prompt } from \"react-router-dom\";\nimport TokenService from '../../Services/token-service';\nimport config from '../../config';\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SpellsApiService from '../../Services/spells-api-service';\nimport Chip from '@material-ui/core/Chip';\nimport LockIcon from '@material-ui/icons/Lock';\nimport useStyles from '../../styles.js';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CodeMirror from 'codemirror';\nimport {UnControlled as ReactCodeMirror} from 'react-codemirror2';\nimport 'codemirror/addon/edit/matchbrackets.js'\nimport 'codemirror/addon/edit/closebrackets.js'\nimport 'codemirror/addon/selection/active-line.js'\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\n\n\nlet debounceTimer\n\nexport default function SpellDetails(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [spell, setSpell] = useState();\n  const [isSaving, setIsSaving] = useState(false);\n  // FIXME: CodeMirror re-render workaround. Needs revision\n  const [spellText, setSpellText] = useState(undefined)\n  const [open, setOpen] = React.useState(false);\n  const [spellToDelete, setSpellToDelete] = React.useState(undefined);\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState('');\n  const [spellTag, setSpellTag] = useState(\"\");\n  const [userOwnsSpell, setUserOwnsSpell] = useState()\n  const [error, setError] = useState(null);\n\n  let debounceWait = 2000;\n  let spinnerShow = 1000;\n  \n  const handleClickOpen = (id) => {\n    setSpellToDelete(id);\n  };\n\n  const handleClose = (id) => {\n    setSpellToDelete(undefined);\n  };\n\n  const { id } = useParams();\n  const path = window.location.pathname;\n  \n  useEffect(() => {\n    let isMounted = true\n\n    SpellsApiService.checkForSpellOwnership(id)\n      .then(res => {\n        setUserOwnsSpell(res.userOwnsSpell)\n      })\n    \n    SpellsApiService.getSpellById(id)\n      .then(spell => {\n        if (isMounted) {\n          // console.log(\"spell\" , spell)\n          setSpell(spell)\n          setSpellText(spell.text);\n        }\n      })\n      .catch(res => {\n        setError(res.error);\n      })\n\n    return () => {\n      isMounted = false\n    }\n\n  }, [path, id])\n\n  const debounce = (func, delay) => {\n    // setIsSaving(true);\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func(), delay)\n  }\n\n  const tagWhitelist = [\n  { title: 'Fire'},\n  { title: 'Ice'},\n  { title: 'Water'},\n  { title: 'Deception'},\n  { title: 'Plant'},\n  { title: \"Rock\"},\n  { title: 'Pet'},\n  { title: 'Parasite'},\n  { title: 'Electric'},\n  { title: 'Attack'},\n  { title: 'Heal'}\n  ]\n\n  const updateSpell = (spell) => {\n    setIsSaving(true);\n\n    let payload = spell\n\n    return fetch(`${config.API_ENDPOINT}/spells/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((spell) => {\n        setTimeout(() => {  setIsSaving(false); }, spinnerShow);\n        // setIsSaving(false)\n        setSpell(spell)\n      })\n      .catch(errors => \n        console.log(\"UpdateSpell errors\" , errors))\n  }\n\n  function deleteSpells(id){\n\n    return fetch(`${config.API_ENDPOINT}/spells/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .catch(errors => \n        console.log(\"deleteSpell errors\" , errors))\n  }\n\n  function addTagToSpell(id,tag){\n\n    return fetch(`${config.API_ENDPOINT}/spells/${id}/tags/${tag}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      // body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((tag) => {\n        setIsSaving(false)\n        setSpell({...spell, tags:[...spell.tags, tag]})\n      })\n      .catch(errors => \n        console.log(\"add tag errors\" , errors))\n  }\n\n  //Press enter to save tag\n  function handleKeyUp(event) {\n    if(event.keyCode === 13 && spellTag) {\n        addTagToSpell(spell.id, spellTag)\n        setSpellTag(\"\")\n    }\n  }\n\n  function removeTagFromSpell(id,tag_name){\n    return fetch(`${config.API_ENDPOINT}/spells/${id}/tags/${tag_name}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((tag) => {\n        setIsSaving(false)\n        setSpell({...spell, tags: spell.tags.filter(t => {\n          return t.name !== tag_name\n        })})\n      })\n      .catch(errors => \n        console.log(\"remove tag errors\" , errors))\n  }\n\n  const clickForkIcon = (id) => {\n    // console.log(\"Before API \", id);\n    SpellsApiService.forkSpellById(id)\n    .then((spell) => {\n      history.push(`/spells/${spell.id}`)\n      // console.log(\"After history \", spell.id);\n      // console.log(object);\n    })\n  }\n\n  return (\n    <>\n    <Prompt \n      when={isSaving}\n      message='Spell is not saved yet'\n    />\n      {spell ?\n      <div>\n        <div className={classes.titleRow}>\n          <div className={classes.metaID}>ID: {spell.id}</div>\n          <div className={classes.metaTitle}>\n            <Title>\n              {spell.name}\n            </Title>\n          </div>\n          <div className={classes.metaSpinner}>\n            {spell.locked || !userOwnsSpell ?\n              '' :\n              isSaving ? \n                <div className={classes.spinner}>\n                  <CircularProgress size={30} />\n                </div> : \n                <div className={classes.spinner}><CheckIcon />\n                </div>\n            }\n          </div>\n        </div>\n        <p></p>\n        <div className={classes.iconRow}>\n          {spell.locked || !userOwnsSpell ? \n            <TextField className={classes.spellDetailsTitle}\n              id = \"spell-details-title\"\n              label=\"Name\"\n              defaultValue={spell.name}\n              disabled\n            /> :\n            <TextField className={classes.spellDetailsTitle}\n              id = \"spell-details-title-owns\"\n              label=\"Name\"\n              defaultValue={spell.name}\n              onChange={(event) => {\n                setSpell({...spell, name: event.target.value})\n                setTimeout(() => {\n                  debounce(() => updateSpell({...spell, name: event.target.value}), debounceWait)\n                },500)\n              }}\n            />\n          }\n          <div className={classes.spellDetailsImage}>\n            <img src='https://i.imgur.com/VE9Aksf.jpg' alt=\"Spell Image\" width='40%'></img>\n          </div>\n          <div className={classes.iconBox}>\n            <div className={classes.spellDetailsIcons}>\n              <Tooltip title=\"Fork Spell\" placement=\"top\">\n                <IconButton onClick={() => clickForkIcon(spell.id)}>\n                  <CallSplitIcon />\n                </IconButton>\n              </Tooltip>\n              {spell.locked || !userOwnsSpell ?\n                <Tooltip title=\"Spell Locked\" placement=\"top\">\n                  <IconButton >    \n                    <LockIcon />\n                  </IconButton>\n                </Tooltip> \n                :\n                <>\n                <Tooltip title=\"Public status\" placement=\"top-end\">\n                  <IconButton  aria-label=\"isPublic\" onClick={() => {\n                    setSpell({...spell, is_public: !spell.is_public})\n                    debounce(() => updateSpell({...spell, is_public: !spell.is_public}), debounceWait)\n                  }}>\n                    {spell.is_public ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Delete\" placement=\"top-end\">\n                  <IconButton  aria-label=\"delete\"\n                    onClick={() => handleClickOpen(spell.id)}\n                  >\n                    <DeleteForeverIcon />\n                  </IconButton>\n                </Tooltip>\n                </>\n              }\n            </div>\n          </div>\n        </div>\n         {/* Delete Spell dialog confirmation */}\n        <Dialog\n          open={spellToDelete === spell.id}\n          onClose={() => handleClose(spell.id)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Delete spell?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you would like to delete this spell?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => {handleClose(); deleteSpells(spell.id); history.push('/spells')}} color=\"secondary\">\n              Delete\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Keep\n            </Button>\n          </DialogActions>\n          </Dialog>\n          <div className={classes.iconRow}>\n          {spell.locked || !userOwnsSpell ? \n            <TextField className={classes.spellDetailsDescription}\n              id = \"spell-details-description\"\n              label=\"Description\"\n              defaultValue={spell.description}\n              disabled\n            />:\n            <TextField className={classes.spellDetailsDescription}\n              id = \"spell-details-description-owns\"\n              label=\"Description\"\n              defaultValue={spell.description}\n              onChange={(event) => {\n                setSpell({...spell, description: event.target.value})\n                setTimeout(() => {\n                  debounce(() => updateSpell({...spell, description: event.target.value}), debounceWait)\n                },500)\n              }}\n            />\n          }\n        </div>\n        <p></p>\n        <div className={classes.iconRow}>\n          {spell.locked || !userOwnsSpell ?\n            <TextField className={classes.tagLine}\n              placeholder=\"Tag\"\n              value = {spellTag}\n              label=\"Spell Tags\"\n              disabled\n            /> :\n            <TextField className={classes.tagLine}\n              placeholder=\"Tag\"\n              onKeyUp={handleKeyUp}\n              value = {spellTag}\n              label=\"Spell Tags\"\n              onChange={(event) => {\n                setSpellTag(event.target.value)\n              }}\n            />\n          }\n        </div>\n        {spell.locked || !userOwnsSpell ? \n          <div className={classes.icon}>\n            {spell.tags.map(t => (\n              <Chip\n              key={t.id}\n              variant=\"outlined\"\n              size=\"small\"\n              label={t.name}\n              />\n            ))}\n          </div>\n          :\n          <div className={classes.icon}>\n            {spell.tags.map(t => (\n              <Chip\n              key={t.id}\n              variant=\"outlined\"\n              size=\"small\"\n              label={t.name}\n              onDelete={() => removeTagFromSpell(spell.id, t.name)}\n              />\n            ))}\n          </div>\n        }\n        <p></p> \n        <div className={classes.spellDetailsCodeMirror}>\n          {spell.locked || !userOwnsSpell ?\n            <ReactCodeMirror\n              className={classes.spellDetailsCodeMirror}\n              value={spellText ? spellText : ''}\n              options={{\n                lineWrapping: true,\n                mode: 'scheme',\n                theme: 'material',\n                lineNumbers: true,\n                matchBrackets: true,\n                autoCloseBrackets: true,\n                styleActiveLine: true,\n              }}\n            /> :\n            <ReactCodeMirror\n              className={classes.spellDetailsCodeMirror}\n              value={spellText ? spellText : ''}\n              options={{\n                lineWrapping: true,\n                mode: 'scheme',\n                theme: 'material',\n                lineNumbers: true,\n                matchBrackets: true,\n                autoCloseBrackets: true,\n                styleActiveLine: true,\n              }}\n              onChange={(editor, data, value) => {\n                setSpell({...spell, text: value})\n                // setIsSaving(true)\n                setTimeout(() => {\n                  debounce(() => updateSpell({...spell, text: value}), debounceWait\n                )}, 500)\n              }}\n            />\n          }\n        </div>\n      </div>\n      :\n      <div role='alert'>\n        {error ? <p className='red'>{error}</p> : null}\n      </div>}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}