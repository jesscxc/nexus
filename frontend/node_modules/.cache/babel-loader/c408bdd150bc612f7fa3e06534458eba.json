{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Util.js\",\n    _s = $RefreshSig$();\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport useStyles from './styles.js';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function titleCase(str) {\n  str = str.toLowerCase();\n  str = str.split(' ');\n\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n  }\n\n  return str.join(' ');\n}\nexport function textTrim(text, length) {\n  if (!text) return '';\n\n  if (text.length > length) {\n    return text.slice(0, length) + '...';\n  } else {\n    return text;\n  }\n}\nexport function SearchBar(props) {\n  _s();\n\n  const classes = useStyles();\n  const [searchIcon, setSearchIcon] = React.useState(true);\n  const [focus, setFocus] = React.useState(false);\n\n  const handleSearchIconClick = () => {\n    setFocus(!focus);\n    setSearchIcon(!searchIcon);\n  };\n\n  function onSearchIconChange(event) {\n    props.setSearch(event.target.value);\n    props.setCurrentPage(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputBase, {\n      className: clsx(classes.searchField, searchIcon && classes.searchFieldHidden),\n      placeholder: \"Search Spells\",\n      onChange: onSearchIconChange,\n      inputProps: {\n        'aria-label': 'search'\n      },\n      inputRef: input => {\n        if (input != null) {\n          input.focus();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: event => handleSearchIconClick(),\n      \"aria-label\": \"search icon\",\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"KItHj+HCbU77d0I9F4n/0+lM+ps=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/usr/src/app/src/Util.js"],"names":["Pagination","makeStyles","SearchIcon","InputBase","clsx","IconButton","useStyles","React","useEffect","titleCase","str","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","textTrim","text","SearchBar","props","classes","searchIcon","setSearchIcon","useState","focus","setFocus","handleSearchIconClick","onSearchIconChange","event","setSearch","target","value","setCurrentPage","searchField","searchFieldHidden","input"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAC7BA,EAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;AACAD,EAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAN;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCH,IAAAA,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACG,CAAD,CAAH,CAAOE,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCN,GAAG,CAACG,CAAD,CAAH,CAAOI,KAAP,CAAa,CAAb,CAA1C;AACD;;AACD,SAAOP,GAAG,CAACQ,IAAJ,CAAS,GAAT,CAAP;AACD;AAGD,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBN,MAAxB,EAA+B;AACpC,MAAI,CAACM,IAAL,EAAW,OAAO,EAAP;;AAEX,MAAGA,IAAI,CAACN,MAAL,GAAcA,MAAjB,EAAwB;AACtB,WAAOM,IAAI,CAACH,KAAL,CAAW,CAAX,EAAcH,MAAd,IAAwB,KAA/B;AACD,GAFD,MAEO;AACL,WAAOM,IAAP;AACD;AACF;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAC/B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAEA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACmB,QAAN,CAAe,IAAf,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAA1B;;AAEA,QAAMG,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAF,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAHD;;AAKA,WAASM,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCT,IAAAA,KAAK,CAACU,SAAN,CAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACAZ,IAAAA,KAAK,CAACa,cAAN,CAAqB,CAArB;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAE/B,IAAI,CAACmB,OAAO,CAACa,WAAT,EAAsBZ,UAAU,IAAID,OAAO,CAACc,iBAA5C,CADjB;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAEP,kBAHZ;AAIE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAJd;AAKE,MAAA,QAAQ,EAAGQ,KAAD,IAAW;AACnB,YAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBA,UAAAA,KAAK,CAACX,KAAN;AACD;AACF;AATH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,UAAD;AACE,MAAA,OAAO,EAAGI,KAAD,IAAWF,qBAAqB,EAD3C;AAEE,oBAAa,aAFf;AAAA,6BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAqBD;;GArCeR,S;UACEf,S;;;KADFe,S","sourcesContent":["import Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport useStyles from './styles.js';\nimport React, { useEffect } from 'react';\n\n\nexport function titleCase(str) {\n  str = str.toLowerCase();\n  str = str.split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' '); \n}\n\n\nexport function textTrim(text, length){\n  if (!text) return '';\n\n  if(text.length > length){\n    return text.slice(0, length) + '...';\n  } else {\n    return text;\n  }\n}\n\nexport function SearchBar(props) {\n  const classes = useStyles();\n\n  const [searchIcon, setSearchIcon] = React.useState(true)\n  const [focus, setFocus] = React.useState(false)\n\n  const handleSearchIconClick = () => {\n    setFocus(!focus)\n    setSearchIcon(!searchIcon);\n  };\n  \n  function onSearchIconChange(event) {\n    props.setSearch(event.target.value)\n    props.setCurrentPage(1)\n  }\n\n  return (\n    <>       \n      <InputBase\n        className={clsx(classes.searchField, searchIcon && classes.searchFieldHidden)}\n        placeholder=\"Search Spells\"\n        onChange={onSearchIconChange}\n        inputProps={{ 'aria-label': 'search' }}\n        inputRef={(input) => {\n          if (input != null) {\n            input.focus();\n          }\n        }}\n      />\n      <IconButton\n        onClick={(event) => handleSearchIconClick()}\n        aria-label = \"search icon\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}