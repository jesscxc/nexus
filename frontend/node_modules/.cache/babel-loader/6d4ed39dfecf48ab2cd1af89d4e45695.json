{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { PublicListItems, PrivateListItems } from './ListItems';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport CodeSpells from '../../Assets/CodeSpells.png';\nimport Link from '@material-ui/core/Link';\nimport SpellsApiService from '../../Services/spells-api-service'; // import useStyles from '../../styles.js';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fixedHeightPaper = clsx(classes.dashPaper, classes.fixedHeight);\n  useEffect(() => {\n    // Only running this to check if logged in\n    SpellsApiService.getUserById('me').then(user => setIsLoggedIn(true)).catch(() => setIsLoggedIn(false));\n  }, []);\n  return isLoggedIn === undefined ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dashRoot,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.dashMenuButton, open && classes.dashMenuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          className: classes.dashTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"https://codespells.org/index.html\",\n          className: classes.link,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: CodeSpells,\n            alt: \"CodeSpells\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      },\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(PublicListItems, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(PrivateListItems, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.dashContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.dashPaper,\n              children: props.child\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), isLoggedIn ? props.fabIcon : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"KNAmNMU8GyiFYJXlTijzTRKBZ04=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  dashRoot: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  dashMenuButton: {\n    marginRight: 36\n  },\n  dashMenuButtonHidden: {\n    display: 'none'\n  },\n  dashTitle: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  dashContainer: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  dashPaper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  link: {\n    width: '10%'\n  }\n}));\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/usr/src/app/src/Components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","Toolbar","List","Typography","Divider","IconButton","Container","Grid","Paper","MenuIcon","ChevronLeftIcon","PublicListItems","PrivateListItems","CssBaseline","Drawer","AppBar","clsx","CodeSpells","Link","SpellsApiService","makeStyles","Dashboard","props","classes","useStyles","isLoggedIn","setIsLoggedIn","undefined","open","setOpen","handleDrawerOpen","handleDrawerClose","fixedHeightPaper","dashPaper","fixedHeight","getUserById","then","user","catch","dashRoot","appBar","appBarShift","toolbar","dashMenuButton","dashMenuButtonHidden","dashTitle","link","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","dashContainer","child","fabIcon","drawerWidth","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","position","whiteSpace","overflowX","spacing","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {PublicListItems, PrivateListItems} from './ListItems';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport CodeSpells from '../../Assets/CodeSpells.png';\nimport Link from '@material-ui/core/Link';\nimport SpellsApiService from '../../Services/spells-api-service';\n// import useStyles from '../../styles.js';\nimport { makeStyles} from '@material-ui/core/styles';\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.dashPaper, classes.fixedHeight);\n\n  useEffect(() => {\n    // Only running this to check if logged in\n    SpellsApiService.getUserById('me')\n      .then((user) => setIsLoggedIn(true))\n      .catch(() => setIsLoggedIn(false))\n  }, [])\n\n  return (\n    isLoggedIn === undefined ?\n    '': \n    <div className={classes.dashRoot}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.dashMenuButton, open && classes.dashMenuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.dashTitle}>\n            {/* Admin */}\n          </Typography>\n          <Link href='https://codespells.org/index.html' className={classes.link}>\n            <img src={CodeSpells} alt=\"CodeSpells\" width=\"100%\"></img>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {isLoggedIn ? <PublicListItems/> : <PrivateListItems/>}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.dashContainer}>\n          <Grid container spacing={3}>\n            {/* Spell List */}\n            <Grid item xs={12}>\n              <Paper className={classes.dashPaper}>\n                {props.child}\n              </Paper>\n            </Grid>\n          </Grid>\n          {/* Inserts relevant fab icon by page */}\n          {isLoggedIn ? props.fabIcon : ''}\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  dashRoot: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  dashMenuButton: {\n    marginRight: 36,\n  },\n  dashMenuButtonHidden: {\n    display: 'none',\n  },\n  dashTitle: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,},\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  dashContainer: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  dashPaper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    width: '10%',\n  }\n}));\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}